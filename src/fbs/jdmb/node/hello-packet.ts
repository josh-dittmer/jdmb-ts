// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { NodeInfo } from '../../jdmb/node/node-info.js';


export class HelloPacket {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HelloPacket {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHelloPacket(bb:flatbuffers.ByteBuffer, obj?:HelloPacket):HelloPacket {
  return (obj || new HelloPacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHelloPacket(bb:flatbuffers.ByteBuffer, obj?:HelloPacket):HelloPacket {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HelloPacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

node(obj?:NodeInfo):NodeInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NodeInfo()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startHelloPacket(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addNode(builder:flatbuffers.Builder, nodeOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, nodeOffset, 0);
}

static endHelloPacket(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHelloPacket(builder:flatbuffers.Builder, nodeOffset:flatbuffers.Offset):flatbuffers.Offset {
  HelloPacket.startHelloPacket(builder);
  HelloPacket.addNode(builder, nodeOffset);
  return HelloPacket.endHelloPacket(builder);
}
}
